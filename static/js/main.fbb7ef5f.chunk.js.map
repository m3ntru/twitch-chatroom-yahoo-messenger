{"version":3,"sources":["img/avatar1.gif","img/avatar2.gif","model/Converter.js","Chatbox.js","App.js","reportWebVitals.js","index.js"],"names":["splitTextV1","t","e","n","c","v","r","text","o","i","trim","length","indexOf","a","s","split","forEach","push","RegExp","concat","u","match","shift","out","cheerList","cheerTotal","parseInt","count","display","message","formatText","z","l","replace","substring","d","join","m","y","g","map","exec","b","formatTwitchEmotes","height","temp1","toLowerCase","temp2","cheerJson","emotes","splitText","Array","from","j","mote","empty","apply","slice","splice","Chatbox","chatBoxref","useRef","useState","badge","setBadge","setBttv","name","id","msg","color","messages","setMessges","useEffect","badgeInit","tmiInit","bttvInit","current","scrollIntoView","behavior","GetGlobalBadge","fetch","response","json","data","badge_sets","GetChannalBadge","Promise","all","TempGBdg","undefined","TempCBdg","Object","assign","preBadge","twitchfetch","GetGlobal","GetChannal","sharedEmotes","TempGBttv","TempCBttv","result","preBttv","console","log","getBttv","paramsId","URLSearchParams","window","location","search","get","client","tmi","Client","options","debug","messagesLogLevel","connection","reconnect","secure","identity","username","password","channels","connect","then","preArray","catch","err","on","target","context","self","messageUpdate","channel","reason","duration","userstate","filter","Converter","badges","className","index","style","fontStyle","fontSize","bgd","entries","background","fontWeight","marginTop","parse","ref","App","paramsTitle","paramsStatus","src","avatar1","alt","avatar2","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb7ef5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar1.911a71ae.gif\";","export default __webpack_public_path__ + \"static/media/avatar2.cb6b6c66.gif\";","import cheerJson from '../cheer.json'\r\nclass Converter {\r\n    splitTextV1 = (t, e, n, c, v) => {\r\n        var r = [];\r\n        function text(o, i) {\r\n            if (e[i] && o.trim().length)\r\n                if (o.indexOf(e[i]) > -1) {\r\n                    var a = 1\r\n                        , s = o.split(e[i]);\r\n                    s.forEach((function (o) {\r\n                        if (o.length) {\r\n                            var c = \"\";\r\n                            a !== s.length && (c = e[i]);\r\n                            o = (o + c).trim()\r\n                        }\r\n                        o.length && o.length <= n ? r.push(o) : text(o, i + 1);\r\n                        a++\r\n                    }\r\n                    ))\r\n                } else\r\n                    text(o, i + 1);\r\n            else if (o.length)\r\n                for (var c = new RegExp(\".{1,\".concat(n, \"}\"), \"g\"), u = o.match(c); u.length > 0;)\r\n                    r.push(u.shift().trim())\r\n        };\r\n        text(t, 0);\r\n\r\n        var out = [];\r\n        r.forEach(function (t) {\r\n            out.length && out[out.length - 1].length + t.length + 1 <= n ? out[out.length - 1] += \" \".concat(t) : out.push(t)\r\n        })\r\n        var cheerRegex = /([0-9])\\d+/g;\r\n        var cheerList = c.match(cheerRegex);\r\n        var cheerTotal = 0;\r\n        if (cheerList) {\r\n            cheerList.forEach(function (t) {\r\n                cheerTotal = cheerTotal + parseInt(t);\r\n            })\r\n        }\r\n        var data = {\r\n            count: cheerTotal,\r\n            display: v,\r\n            message: out\r\n        }\r\n        return data;\r\n    }\r\n\r\n    \r\n    formatText = (t, e, n, z) => {\r\n        var space = /\\s+/g;\r\n        //var comma = /,/g;\r\n        var vv = t;\r\n        t = t.replace(space, ' ');\r\n        //t = t.replace(comma, '');\r\n        var u = vv,\r\n            l = t,\r\n            f = [\"cheer\", \"doodlecheer\", \"biblethump\", \"cheerwhal\", \"corgo\", \"scoops\", \"party\", \"seemsgood\", \"pride\", \"uni\", \"showlove\", \"kappa\", \"frankerz\", \"heyguys\", \"dansgame\", \"elegiggle\", \"trihard\", \"kreygasm\", \"4head\", \"swiftrage\", \"notlikethis\", \"failfish\", \"vohiyo\", \"pjsalt\", \"mrdestructoid\", \"bday\", \"ripcheer\", \"shamrock\", \"bitboss\", \"streamlabs\", \"muxy\", \"holidaycheer\", \"goal\", \"anon\", \"charity\", \"ickidcheer\"]\r\n        u.length > 300 && (u = \"\".concat(u.substring(0, 296), \"...\"));\r\n        l.length > 550 && (l = \"\".concat(l.substring(0, 446), \"...\"));\r\n        var d = new RegExp(\"\\\\b(\".concat(f.join(\"|\"), \")([0-9]+)\\\\b\"), \"gi\"),\r\n            m = /(^|\\s)([a-zA-Z0-9][a-zA-Z]+|[a-zA-Z0-9]+cheer)([0-9]+)(\\s|$)/i,\r\n            y = u.match(d),\r\n            g = [];\r\n        y && (g = y.map((function (t) {\r\n            return m.exec(t)\r\n        })));\r\n        var c = \"\";\r\n        var b = l;\r\n        var v = u;\r\n        v = this.formatTwitchEmotes(v,z);\r\n        g.forEach((function (t) {\r\n            var color, height;\r\n            var i = parseInt(t[3]);\r\n            if (parseInt(t[3]) >= 1e4) { color = \"red\"; height = 10000; }\r\n            if (parseInt(t[3]) >= 5e3 && parseInt(t[3]) <= 9999) { color = \"blue\"; height = 5000; }\r\n            if (parseInt(t[3]) >= 1e3 && parseInt(t[3]) <= 4999) { color = \"#2dfdbe\"; height = 1000; }\r\n            if (parseInt(t[3]) >= 100 && parseInt(t[3]) <= 999) { color = \"#be61ff\"; height = 100; }\r\n            if (parseInt(t[3]) >= 1 && parseInt(t[3]) <= 99) { color = \"grey\"; height = 1; }\r\n            var temp1 = t[2].toLowerCase();\r\n            var temp2 = cheerJson[temp1][height];\r\n            v = v.replace(t[0], \"<img class='cheer' src='\" + temp2 + \"' />\");\r\n            b = b.replace(t[0], \"\");\r\n            c = c + t[0] + ' ';\r\n        }))\r\n        l = b;\r\n        l = l.replace(/((?:https?|ftp):\\/\\/[\\n\\S]+)|(<([^>]+)>)+/gi, \"\").trim();\r\n        return this.splitTextV1(l, e, n, c, v);\r\n    }\r\n\r\n    formatTwitchEmotes = (text, emotes) => {\r\n        let link = 'http://static-cdn.jtvnw.net/emoticons/v2/';\r\n        var splitText = Array.from(text);\r\n        for (var i in emotes) {\r\n            var e = emotes[i];\r\n            for (var j in e) {\r\n                var mote = e[j];\r\n                if (typeof mote === 'string') {\r\n                    mote = mote.split('-');\r\n                    mote = [parseInt(mote[0]), parseInt(mote[1])];\r\n                    var length = mote[1] - mote[0];\r\n                    var empty = Array.apply(null, new Array(length + 1)).map(function () { return ''; });\r\n                    splitText = splitText.slice(0, mote[0]).concat(empty).concat(splitText.slice(mote[1] + 1, splitText.length));\r\n                    splitText.splice(mote[0], 1, `<img class=\"emoticon\" src=\"${link}${i}/default/dark/1.0\">`);\r\n                };\r\n            };\r\n        }\r\n        return splitText.join('');\r\n    }\r\n}\r\n\r\nexport default new Converter()\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport tmi from 'tmi.js'\r\nimport Converter from './model/Converter';\r\nimport parse from 'html-react-parser';\r\n\r\nexport const Chatbox = () => {\r\n  const chatBoxref = useRef(null);\r\n  const [badge, setBadge] = useState(null);\r\n  const [bttv, setBttv] = useState(null);\r\n  const [messages, setMessges] = useState([\r\n    {\r\n      name: \"System\",\r\n      id: \"System\",\r\n      msg: \"initializing...\",\r\n      color: \"#000000\",\r\n      emotes: null,\r\n      badge: null\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    badgeInit();\r\n    tmiInit();\r\n    bttvInit();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    chatBoxref.current.scrollIntoView({ behavior: \"auto\" })\r\n  }, [messages]);\r\n\r\n  const badgeInit = () => {\r\n    async function GetGlobalBadge() {\r\n      /** Fetch Global Badge **/\r\n      const response = await fetch('https://badges.twitch.tv/v1/badges/global/display');\r\n      const data = await response.json();\r\n      return data.badge_sets;\r\n    }\r\n\r\n    async function GetChannalBadge() {\r\n      /** Fetch Channal Badge **/\r\n      const response = await fetch(`https://badges.twitch.tv/v1/badges/channels/68150547/display`);\r\n      const data = await response.json();\r\n      return data.badge_sets;\r\n    }\r\n\r\n    async function twitchfetch() {\r\n      /** Fetch Global & Channel Badge **/\r\n      let [TempGBdg, TempCBdg] = await Promise.all([GetGlobalBadge(), GetChannalBadge()]);\r\n      /** Replace Global one with Channel's bits & sub Badge **/\r\n      if (TempCBdg['bits'] !== undefined) {\r\n        delete TempCBdg['bits'];\r\n      }\r\n      if (TempCBdg['subscriber'] !== undefined) {\r\n        delete TempGBdg['subscriber'];\r\n      }\r\n      Object.assign(TempGBdg, TempCBdg);\r\n      setBadge(preBadge => TempGBdg);\r\n    }\r\n    twitchfetch();\r\n  }\r\n\r\n  const bttvInit = () => {\r\n    async function GetGlobal() {\r\n      /** Fetch Global Badge **/\r\n      const response = await fetch('https://api.betterttv.net/3/cached/emotes/global');\r\n      const data = await response.json();\r\n      return data;\r\n    }\r\n\r\n    async function GetChannal() {\r\n      /** Fetch Global Badge **/\r\n      const response = await fetch('https://api.betterttv.net/3/cached/users/twitch/68150547');\r\n      const data = await response.json();\r\n      return data.sharedEmotes;\r\n    }\r\n\r\n    async function getBttv() {\r\n      let [TempGBttv, TempCBttv] = await Promise.all([GetGlobal(), GetChannal()]);\r\n      let result = TempGBttv.concat(TempCBttv);\r\n      setBttv(preBttv => result);\r\n      console.log(result);\r\n    }\r\n    getBttv();\r\n  }\r\n\r\n  const tmiInit = () => {\r\n    const paramsId = new URLSearchParams(window.location.search).get(\"id\");\r\n    const client = new tmi.Client({\r\n      options: { debug: true, messagesLogLevel: \"info\" },\r\n      connection: {\r\n        reconnect: true,\r\n        secure: true\r\n      },\r\n      identity: {\r\n        username: \"justinfan123456\",\r\n        password: \"\"\r\n      },\r\n      channels: [paramsId]\r\n    });\r\n    client.connect().then((data) => {\r\n      setMessges(preArray => [...preArray,\r\n      {\r\n        name: \"System\",\r\n        id: \"System\",\r\n        msg: \"Joined \" + paramsId,\r\n        color: \"#000000\",\r\n        emotes: null,\r\n        badge: null\r\n      }\r\n      ]);\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    });\r\n\r\n    client.on(\"message\", (target, context, msg, self) => {\r\n      messageUpdate(context, msg);\r\n    });\r\n\r\n    client.on(\"timeout\", (channel, username, reason, duration, userstate) => {\r\n      setMessges(preArray => {\r\n        preArray = preArray.filter(({ id }) => id !== username);\r\n        return [...preArray,\r\n        {\r\n          name: \"timeout\",\r\n          id: \"timeout\",\r\n          msg: username + \" 吃了\" + duration + \"秒的刀\",\r\n          color: \"#0000FF\",\r\n          emotes: null,\r\n          badge: null\r\n        }]\r\n      }\r\n      )\r\n    });\r\n\r\n    client.on('cheer', (channel, userstate, message) => {\r\n      var result = Converter.formatText(message, [\".\", \"!\", \"?\", \":\", \";\", \",\", \" \"], 90, userstate.emotes);\r\n      messageUpdate(userstate, result.display)\r\n    });\r\n  };\r\n\r\n  const messageUpdate = (context, msg) => {\r\n    setMessges(preArray => {\r\n      if (preArray.length === 15) {\r\n        preArray.shift();\r\n      }\r\n      return [...preArray,\r\n      {\r\n        name: context[\"display-name\"],\r\n        msg,\r\n        id: context.username,\r\n        color: context.color,\r\n        emotes: context.emotes,\r\n        badge: context.badges\r\n      }\r\n      ]\r\n    });\r\n  }\r\n\r\n  const getbadageurl = (bgd) => {\r\n    if (bgd) {\r\n      return (\r\n        Object.entries(bgd).map((data, index) => (\r\n          <span className=\"badge\" style={{ background: 'url(' + badge[data[0]]['versions'][data[1]]['image_url_1x'] + ')' }}></span>\r\n        ))\r\n      )\r\n    }\r\n    else return null;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"chat-box\">\r\n        {messages.map((data, index) => (\r\n          (data.id == \"timeout\") ?\r\n            <div className=\"text\" style={{ fontStyle: \"italic\", fontSize: \"12px\", color: \"blue\" }} key={index}>\r\n              {data.msg}\r\n            </div>\r\n            :\r\n            <div className=\"text\" key={index}>\r\n              {getbadageurl(data.badge)}\r\n              <span style={{ fontWeight: \"bold\", color: data.color, fontSize: \"14px\", marginTop: \"14px\" }}>{data.name + \": \"}</span>\r\n              {parse(Converter.formatTwitchEmotes(data.msg, data.emotes))}\r\n            </div>\r\n        ))}\r\n        <div ref={chatBoxref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react';\nimport avatar1 from './img/avatar1.gif';\nimport avatar2 from './img/avatar2.gif';\nimport { Chatbox } from './Chatbox';\nimport './App.css';\n\nfunction App() {\n  const paramsTitle = new URLSearchParams(window.location.search).get(\"title\");\n  const paramsStatus = new URLSearchParams(window.location.search).get(\"status\");\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">{paramsTitle}</div>\n      <div className=\"status\">{paramsStatus}</div>\n      <Chatbox />\n      <img className=\"avatar-one\" src={avatar1} alt=\"avatar1\" />\n      <img className=\"avatar-two\" src={avatar2} alt=\"avatar2\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}