{"version":3,"sources":["img/avatar1.gif","img/avatar2.gif","model/Converter.js","Chatbox.js","App.js","reportWebVitals.js","index.js"],"names":["formatText","t","e","n","z","u","l","replace","length","concat","substring","d","RegExp","join","m","y","match","g","map","exec","c","b","v","formatTwitchEmotes","forEach","color","height","parseInt","temp1","toLowerCase","temp2","cheerJson","trim","splitTextV1","text","emotes","splitText","Array","from","i","j","mote","split","empty","apply","slice","splice","Chatbox","chatBoxref","useRef","useState","name","msg","messages","setMessges","useEffect","tmiInit","current","scrollTop","scrollHeight","paramsId","URLSearchParams","window","location","search","get","client","tmi","Client","options","debug","messagesLogLevel","connection","reconnect","secure","identity","username","password","channels","connect","then","data","preArray","catch","err","console","log","on","target","context","self","messageUpdate","shift","className","ref","index","style","fontWeight","fontSize","parse","Converter","App","paramsTitle","paramsStatus","src","avatar1","alt","avatar2","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.949e9a5b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar1.911a71ae.gif\";","export default __webpack_public_path__ + \"static/media/avatar2.cb6b6c66.gif\";","import cheerJson from '../cheer.json'\r\nclass Converter {\r\n    \r\n    formatText = (t, e, n, z) => {\r\n        var space = /\\s+/g;\r\n        //var comma = /,/g;\r\n        var vv = t;\r\n        t = t.replace(space, ' ');\r\n        //t = t.replace(comma, '');\r\n        var u = vv,\r\n            l = t,\r\n            f = [\"cheer\", \"doodlecheer\", \"biblethump\", \"cheerwhal\", \"corgo\", \"scoops\", \"party\", \"seemsgood\", \"pride\", \"uni\", \"showlove\", \"kappa\", \"frankerz\", \"heyguys\", \"dansgame\", \"elegiggle\", \"trihard\", \"kreygasm\", \"4head\", \"swiftrage\", \"notlikethis\", \"failfish\", \"vohiyo\", \"pjsalt\", \"mrdestructoid\", \"bday\", \"ripcheer\", \"shamrock\", \"bitboss\", \"streamlabs\", \"muxy\", \"holidaycheer\", \"goal\", \"anon\", \"charity\", \"ickidcheer\"]\r\n        u.length > 300 && (u = \"\".concat(u.substring(0, 296), \"...\"));\r\n        l.length > 550 && (l = \"\".concat(l.substring(0, 446), \"...\"));\r\n        var d = new RegExp(\"\\\\b(\".concat(f.join(\"|\"), \")([0-9]+)\\\\b\"), \"gi\"),\r\n            m = /(^|\\s)([a-zA-Z0-9][a-zA-Z]+|[a-zA-Z0-9]+cheer)([0-9]+)(\\s|$)/i,\r\n            y = u.match(d),\r\n            g = [];\r\n        y && (g = y.map((function (t) {\r\n            return m.exec(t)\r\n        })));\r\n        var c = \"\";\r\n        var b = l;\r\n        var v = u;\r\n        v = this.formatTwitchEmotes(v,z);\r\n        g.forEach((function (t) {\r\n            var color, height;\r\n            var i = parseInt(t[3]);\r\n            if (parseInt(t[3]) >= 1e4) { color = \"red\"; height = 10000; }\r\n            if (parseInt(t[3]) >= 5e3 && parseInt(t[3]) <= 9999) { color = \"blue\"; height = 5000; }\r\n            if (parseInt(t[3]) >= 1e3 && parseInt(t[3]) <= 4999) { color = \"#2dfdbe\"; height = 1000; }\r\n            if (parseInt(t[3]) >= 100 && parseInt(t[3]) <= 999) { color = \"#be61ff\"; height = 100; }\r\n            if (parseInt(t[3]) >= 1 && parseInt(t[3]) <= 99) { color = \"grey\"; height = 1; }\r\n            var temp1 = t[2].toLowerCase();\r\n            var temp2 = cheerJson[temp1][height];\r\n            v = v.replace(t[0], \"<img src='\" + temp2 + \"' /><font color='\" + color + \"'>\" + t[3] + \"</font>\");\r\n            b = b.replace(t[0], \"\");\r\n            c = c + t[0] + ' ';\r\n        }))\r\n        l = b;\r\n        l = l.replace(/((?:https?|ftp):\\/\\/[\\n\\S]+)|(<([^>]+)>)+/gi, \"\").trim();\r\n        return this.splitTextV1(l, e, n, c, v);\r\n    }\r\n\r\n    formatTwitchEmotes = (text, emotes) => {\r\n        let link = 'http://static-cdn.jtvnw.net/emoticons/v2/';\r\n        var splitText = Array.from(text);\r\n        for (var i in emotes) {\r\n            var e = emotes[i];\r\n            for (var j in e) {\r\n                var mote = e[j];\r\n                if (typeof mote === 'string') {\r\n                    mote = mote.split('-');\r\n                    mote = [parseInt(mote[0]), parseInt(mote[1])];\r\n                    var length = mote[1] - mote[0];\r\n                    var empty = Array.apply(null, new Array(length + 1)).map(function () { return ''; });\r\n                    splitText = splitText.slice(0, mote[0]).concat(empty).concat(splitText.slice(mote[1] + 1, splitText.length));\r\n                    splitText.splice(mote[0], 1, `<img class=\"emoticon\" src=\"${link}${i}/default/dark/1.0\">`);\r\n                };\r\n            };\r\n        }\r\n        return splitText.join('');\r\n    }\r\n}\r\n\r\nexport default new Converter()\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport tmi from 'tmi.js'\r\nimport Converter from './model/Converter';\r\nimport parse from 'html-react-parser';\r\n\r\nexport const Chatbox = () => {\r\n  const chatBoxref = useRef(null);\r\n  const [messages, setMessges] = useState([\r\n    {\r\n      name: \"System\",\r\n      msg: \"initializing...\",\r\n      color: \"#000000\",\r\n      emotes: null\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    tmiInit();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    chatBoxref.current.scrollTop = chatBoxref.current.scrollHeight;\r\n  }, [messages]);\r\n\r\n  const tmiInit = () => {\r\n    const paramsId = new URLSearchParams(window.location.search).get(\"id\");\r\n    const client = new tmi.Client({\r\n      options: { debug: true, messagesLogLevel: \"info\" },\r\n      connection: {\r\n        reconnect: true,\r\n        secure: true\r\n      },\r\n      identity: {\r\n        username: \"justinfan123456\",\r\n        password: \"\"\r\n      },\r\n      channels: [paramsId]\r\n    });\r\n    client.connect().then((data) => {\r\n      setMessges(preArray => [...preArray,\r\n      {\r\n        name: \"System\",\r\n        msg: \"Joined \" + paramsId,\r\n        color: \"#000000\",\r\n        emotes: null\r\n      }\r\n      ]);\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    });\r\n\r\n    client.on(\"message\", (target, context, msg, self) => {\r\n      messageUpdate(target, context, msg, self)\r\n    });\r\n  };\r\n\r\n  const messageUpdate = (target, context, msg, self) => {\r\n    setMessges(preArray => {\r\n      if (preArray.length === 15) {\r\n        preArray.shift();\r\n      }\r\n      return [...preArray,\r\n      {\r\n        name: context[\"display-name\"],\r\n        msg,\r\n        color: context.color,\r\n        emotes: context.emotes\r\n      }\r\n      ]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div ref={chatBoxref} className=\"chat-box\">\r\n        {messages.map((data, index) => (\r\n          <div className=\"text\" key={index} ><span style={{ fontWeight: \"bold\", color: data.color, fontSize: \"15px\" }}>{data.name + \": \"}</span>\r\n            {parse(Converter.formatTwitchEmotes(data.msg, data.emotes))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react';\nimport avatar1 from './img/avatar1.gif';\nimport avatar2 from './img/avatar2.gif';\nimport { Chatbox } from './Chatbox';\nimport './App.css';\n\nfunction App() {\n  const paramsTitle = new URLSearchParams(window.location.search).get(\"title\");\n  const paramsStatus = new URLSearchParams(window.location.search).get(\"status\");\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">{paramsTitle}</div>\n      <div className=\"status\">{paramsStatus}</div>\n      <Chatbox />\n      <img className=\"avatar-one\" src={avatar1} alt=\"avatar1\" />\n      <img className=\"avatar-two\" src={avatar2} alt=\"avatar2\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}